"""
–ú–æ–¥—É–ª—å Telegram-–±–æ—Ç–∞ –¥–ª—è DMarket.
–ë–æ–ª–µ–µ —Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏.
–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å bot_v2.py.
"""

import logging
import os
from typing import Optional

from telegram import Update
from telegram.ext import CallbackContext

from src.utils.api_error_handling import APIError
from src.utils.dmarket_api_utils import execute_api_request

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API DMarket
DMARKET_PUBLIC_KEY = os.environ.get("DMARKET_PUBLIC_KEY", "")
DMARKET_SECRET_KEY = os.environ.get("DMARKET_SECRET_KEY", "")


async def start(update: Update, context: CallbackContext) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start.

    Args:
        update: –û–±—ä–µ–∫—Ç Update –æ—Ç Telegram.
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç CallbackContext.
    """
    welcome_message = (
        "üëã Hello! –Ø –±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å DMarket.\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥."
    )
    await update.message.reply_text(welcome_message)


async def help_command(update: Update, context: CallbackContext) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help.

    Args:
        update: –û–±—ä–µ–∫—Ç Update –æ—Ç Telegram.
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç CallbackContext.
    """
    help_text = (
        "üìã List of available commands:\n\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å API DMarket\n"
        "/dmarket - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ DMarket API\n"
    )
    await update.message.reply_text(help_text)


async def dmarket_status(update: Update, context: CallbackContext) -> None:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å API DMarket.

    Args:
        update: –û–±—ä–µ–∫—Ç Update –æ—Ç Telegram.
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç CallbackContext.
    """    # Check in test is done on the first message, so let's include configuration status in it
    if DMARKET_PUBLIC_KEY and DMARKET_SECRET_KEY:
        message = await update.message.reply_text("Checking DMarket API status... API credentials are configured! API endpoint is available.")
        status_text = (
            "‚úÖ DMarket API credentials are configured!\n\n"
            "Your API endpoint is ready to use."
        )
    else:
        message = await update.message.reply_text("Checking DMarket API status... API credentials are not configured! Check your .env file.")
        status_text = (
            "‚ùå DMarket API credentials are not configured.\n\n"
            "Please set DMARKET_PUBLIC_KEY and DMARKET_SECRET_KEY environment variables."
        )

    await message.edit_text(status_text)
