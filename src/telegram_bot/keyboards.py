"""
–ú–æ–¥—É–ª—å —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è Telegram-–±–æ—Ç–∞.
"""

from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from src.dmarket.arbitrage import GAMES


def get_arbitrage_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –∞—Ä–±–∏—Ç—Ä–∞–∂–∞."""
    keyboard = [
        [
            InlineKeyboardButton("üöÄ –†–∞–∑–≥–æ–Ω –±–∞–ª–∞–Ω—Å–∞", callback_data="arbitrage_boost"),
            InlineKeyboardButton("üíº –°—Ä–µ–¥–Ω–∏–π —Ç—Ä–µ–π–¥–µ—Ä", callback_data="arbitrage_mid")
        ],
        [
            InlineKeyboardButton("üí∞ Trade Pro", callback_data="arbitrage_pro"),
            InlineKeyboardButton("üåü –õ—É—á—à–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏", 
                               callback_data="best_opportunities")
        ],
        [
            InlineKeyboardButton("ü§ñ –ê–≤—Ç–æ-–∞—Ä–±–∏—Ç—Ä–∞–∂", callback_data="auto_arbitrage")
        ],
        [
            InlineKeyboardButton("üéÆ –í—ã–±—Ä–∞—Ç—å –∏–≥—Ä—É", callback_data="select_game")
        ],
        [
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)


def get_game_selection_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–≥—Ä—ã."""
    keyboard = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∏–≥—Ä—ã (–ø–æ 2 –≤ —Å—Ç—Ä–æ–∫–µ)
    game_buttons = []
    for game_code, game_name in GAMES.items():
        game_buttons.append(
            InlineKeyboardButton(game_name, callback_data=f"game:{game_code}")
        )
        
        # –ö–∞–∂–¥—ã–µ 2 –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        if len(game_buttons) == 2:
            keyboard.append(game_buttons)
            game_buttons = []
    
    # –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–µ–ø–∞—Ä–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    if game_buttons:
        keyboard.append(game_buttons)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
    keyboard.append([
        InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="arbitrage")
    ])
    
    return InlineKeyboardMarkup(keyboard)


def get_auto_arbitrage_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞—Ä–±–∏—Ç—Ä–∞–∂–∞."""
    keyboard = [
        [
            InlineKeyboardButton("üí∞ –ú–∏–Ω. –ø—Ä–∏–±—ã–ª—å", 
                               callback_data="auto_start:auto_low")
        ],
        [
            InlineKeyboardButton("üí∞üí∞ –°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å", 
                               callback_data="auto_start:auto_medium")
        ],
        [
            InlineKeyboardButton("üí∞üí∞üí∞ –í—ã—Å–æ–∫–∞—è –ø—Ä–∏–±—ã–ª—å", 
                               callback_data="auto_start:auto_high")
        ],
        [
            InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="auto_stats")
        ],
        [
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="arbitrage")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)


def get_back_to_arbitrage_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –º–µ–Ω—é –∞—Ä–±–∏—Ç—Ä–∞–∂–∞."""
    keyboard = [
        [
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é –∞—Ä–±–∏—Ç—Ä–∞–∂–∞", 
                               callback_data="arbitrage")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)


def get_settings_keyboard(auto_trading_enabled=False):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫.
    
    Args:
        auto_trading_enabled: –§–ª–∞–≥, –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è
        
    Returns:
        –†–∞–∑–º–µ—Ç–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    keyboard = [
        [
            InlineKeyboardButton("üîë API –∫–ª—é—á–∏", callback_data="settings_api_keys")
        ],
        [
            InlineKeyboardButton("üåê –Ø–∑—ã–∫", callback_data="settings_language")
        ],
        [
            InlineKeyboardButton(
                "ü§ñ –ê–≤—Ç–æ-—Ç–æ—Ä–≥–æ–≤–ª—è: " + ("‚úÖ –í–∫–ª." if auto_trading_enabled else "‚ùå –í—ã–∫–ª."), 
                callback_data="settings_toggle_trading"
            )
        ],
        [
            InlineKeyboardButton("üí∞ –õ–∏–º–∏—Ç—ã —Ç–æ—Ä–≥–æ–≤–ª–∏", callback_data="settings_limits")
        ],
        [
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)


def get_language_keyboard(current_language="ru"):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
    
    Args:
        current_language: –¢–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫
        
    Returns:
        –†–∞–∑–º–µ—Ç–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
    """
    # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏
    languages = {
        "ru": "üá∑üá∫ –†—É—Å—Å–∫–∏–π",
        "en": "üá¨üáß English",
        "es": "üá™üá∏ Espa√±ol",
        "de": "üá©üá™ Deutsch"
    }
    
    keyboard = []
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞ (–ø–æ 2 –≤ —Å—Ç—Ä–æ–∫–µ)
    lang_buttons = []
    
    for lang_code, lang_name in languages.items():
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–º–µ—Ç–∫—É –∫ —Ç–µ–∫—É—â–µ–º—É –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —è–∑—ã–∫—É
        button_text = f"{lang_name} ‚úÖ" if lang_code == current_language else lang_name
        
        lang_buttons.append(
            InlineKeyboardButton(button_text, callback_data=f"language:{lang_code}")
        )
        
        # –ö–∞–∂–¥—ã–µ 2 –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        if len(lang_buttons) == 2:
            keyboard.append(lang_buttons)
            lang_buttons = []
    
    # –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–µ–ø–∞—Ä–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    if lang_buttons:
        keyboard.append(lang_buttons)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    keyboard.append([
        InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="settings")
    ])
    
    return InlineKeyboardMarkup(keyboard)


def get_risk_profile_keyboard(current_profile="medium"):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è —Ä–∏—Å–∫–∞ –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏.
    
    Args:
        current_profile: –¢–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Ä–∏—Å–∫–∞
        
    Returns:
        –†–∞–∑–º–µ—Ç–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è —Ä–∏—Å–∫–∞
    """
    profiles = {
        "low": "üü¢ –ù–∏–∑–∫–∏–π —Ä–∏—Å–∫",
        "medium": "üü° –°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫",
        "high": "üî¥ –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫",
    }
    
    keyboard = []
    
    for profile_code, profile_name in profiles.items():
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–º–µ—Ç–∫—É –∫ —Ç–µ–∫—É—â–µ–º—É –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—Ä–æ—Ñ–∏–ª—é
        button_text = f"{profile_name} ‚úÖ" if profile_code == current_profile else profile_name
        
        keyboard.append([
            InlineKeyboardButton(button_text, callback_data=f"risk:{profile_code}")
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏
    keyboard.append([
        InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º —Ç–æ—Ä–≥–æ–≤–ª–∏", callback_data="settings_limits")
    ])
    
    return InlineKeyboardMarkup(keyboard)


def get_back_to_settings_keyboard():
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
    
    Returns:
        –†–∞–∑–º–µ—Ç–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞
    """
    keyboard = [
        [
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="settings")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)
