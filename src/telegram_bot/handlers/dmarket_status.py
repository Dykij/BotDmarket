import traceback
from os import getenv

from dotenv import load_dotenv
from telegram import ChatAction, Update
from telegram.constants import ParseMode
from telegram.ext import CallbackContext

from src.telegram_bot.profiles import get_user_profile
from src.telegram_bot.settings_handlers import get_localized_text
from src.utils.api_error_handling import APIError

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()


async def dmarket_status_impl(
    update: Update, context: CallbackContext, status_message=None
) -> None:
    """–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ DMarket API.

    Args:
        update (Update): –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram
        context (CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        status_message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

    """
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å
    user_id = update.effective_user.id
    profile = get_user_profile(user_id)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∞–Ω–∏—è, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ
    if not status_message:
        await update.effective_chat.send_action(ChatAction.TYPING)
        checking_msg = get_localized_text(user_id, "checking_api")
        status_message = await update.message.reply_text(checking_msg)

    try:
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        await update.effective_chat.send_action(ChatAction.UPLOAD_DOCUMENT)

        import httpx

        from src.dmarket.dmarket_api import DMarketAPI
        from src.telegram_bot.auto_arbitrage_scanner import check_user_balance

        # –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á–∏ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        public_key = profile.get("api_key", "")
        secret_key = profile.get("api_secret", "")
        auth_source = ""
        if not public_key or not secret_key:
            # –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫–ª—é—á–µ–π –≤ –ø—Ä–æ—Ñ–∏–ª–µ, –ø—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
            public_key = getenv("DMARKET_PUBLIC_KEY", "")
            secret_key = getenv("DMARKET_SECRET_KEY", "")
            auth_source = " <i>(–∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è)</i>"

        auth_status = "‚ùå <b>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</b>: –∫–ª—é—á–∏ API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        if public_key and secret_key:
            auth_status = f"‚úÖ <b>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</b>: –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞{auth_source}"

        api_client = DMarketAPI(
            public_key=public_key,
            secret_key=secret_key,
            pool_limits=httpx.Limits(max_connections=5),
        )

        api_status = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        balance_info = ""

        try:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å API
            await update.effective_chat.send_action(ChatAction.TYPING)

            # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ —É–ª—É—á—à–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            balance_data = await check_user_balance(api_client)

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–∫–∏
            if balance_data.get("error", False):
                api_status = "‚ö†Ô∏è <b>API</b>: –ø—Ä–æ–±–ª–µ–º–∞ —Å –¥–æ—Å—Ç—É–ø–æ–º"
                error_message = balance_data.get("error_message", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")

                if "unauthorized" in error_message.lower() or "token" in error_message.lower():
                    auth_status = "‚ùå <b>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</b>: –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
                    balance_info = "<i>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á–∏ API.</i>"
                else:
                    balance_info = f"<i>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –±–∞–ª–∞–Ω—Å–∞:</i> {error_message}"
            else:
                has_funds = balance_data.get("has_funds", False)
                balance = balance_data.get("balance", 0.0)

                api_status = "‚úÖ <b>API –¥–æ—Å—Ç—É–ø–Ω–æ</b>"

                if public_key and secret_key:
                    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –±–∞–ª–∞–Ω—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    if balance > 0:
                        balance_status = "‚úÖ"
                    else:
                        balance_status = "‚ö†Ô∏è"
                    balance_info = (
                        f"{balance_status} <b>–ë–∞–ª–∞–Ω—Å</b>: <code>${balance:.2f} USD</code>"
                    )
                else:
                    balance_info = "<i>–ë–∞–ª–∞–Ω—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –±–µ–∑ API –∫–ª—é—á–µ–π.</i>"

        except APIError as e:
            api_status = f"‚ö†Ô∏è <b>–û—à–∏–±–∫–∞ API</b>: {e.message}"
            if e.status_code == 401:
                auth_status = "‚ùå <b>–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</b>: –Ω–µ–≤–µ—Ä–Ω—ã–µ –∫–ª—é—á–∏ API"
            balance_info = "<i>–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å.</i>"

        except Exception as e:
            api_status = f"‚ùå <b>–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è</b>: {e!s}"
            balance_info = "<i>–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å.</i>"

        finally:
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            await api_client._close_client()

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º
        troubleshooting = ""
        if "–æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏" in auth_status.lower() or "‚ùå" in auth_status:
            troubleshooting = (
                "\n\nüîß <b>–î–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã:</b>\n"
                "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å API –∫–ª—é—á–µ–π\n"
                "2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–ª—é—á–∏ –Ω–µ –∏—Å—Ç–µ–∫–ª–∏\n"
                "3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–µ –∫–ª—é—á–∏ API –Ω–∞ DMarket, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ"
            )

        status_message = (
            f"{api_status}\n"
            f"{auth_status}\n"
            f"{balance_info}{troubleshooting}\n\n"
            f"üïí <i>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: —Ç–æ–ª—å–∫–æ —á—Ç–æ</i>"
        )

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º HTML
        await status_message.edit_text(
            status_message,
            parse_mode=ParseMode.HTML,
        )

    except Exception as e:
        error_traceback = traceback.format_exc()
        await status_message.edit_text(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ DMarket API.</b>\n\n"
            f"<i>–û—à–∏–±–∫–∞:</i> <code>{e!s}</code>\n\n"
            "üïí <i>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: —Ç–æ–ª—å–∫–æ —á—Ç–æ</i>",
            parse_mode=ParseMode.HTML,
        )
