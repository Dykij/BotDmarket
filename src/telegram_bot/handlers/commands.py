"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ Telegram –±–æ—Ç–∞.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
–í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥, –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å / —Å–æ–±—Ä–∞–Ω—ã –∑–¥–µ—Å—å.
"""

import logging

from telegram import Update
from telegram.constants import ChatAction, ParseMode
from telegram.ext import ContextTypes

from src.telegram_bot.auto_arbitrage import check_balance_command
from src.telegram_bot.keyboards import (
    get_game_selection_keyboard,
    get_marketplace_comparison_keyboard,
    get_modern_arbitrage_keyboard,
    get_permanent_reply_keyboard,
    get_webapp_button,
)

logger = logging.getLogger(__name__)


async def start_command(update, context):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start.

    Args:
        update: –û–±—ä–µ–∫—Ç Update –æ—Ç Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º

    """
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline –∫–Ω–æ–ø–∫–∞–º–∏
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å DMarket API. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_modern_arbitrage_keyboard(),
        parse_mode=ParseMode.HTML,
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    await update.message.reply_text(
        "‚ö° <b>–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø</b>\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∏–∂–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –æ—Å–Ω–æ–≤–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º:",
        reply_markup=get_permanent_reply_keyboard(),
        parse_mode=ParseMode.HTML,
    )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —á—Ç–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞
    if hasattr(context, "user_data"):
        context.user_data["keyboard_enabled"] = True


async def help_command(update, context):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help.

    Args:
        update: –û–±—ä–µ–∫—Ç Update –æ—Ç Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º

    """
    await update.message.reply_text(
        "‚ùì <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/arbitrage - –ú–µ–Ω—é –∞—Ä–±–∏—Ç—Ä–∞–∂–∞\n"
        "/balance - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å\n"
        "/webapp - –û—Ç–∫—Ä—ã—Ç—å DMarket –≤ WebApp",
        parse_mode=ParseMode.HTML,
        reply_markup=get_modern_arbitrage_keyboard(),
    )


async def webapp_command(update, context):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /webapp.

    Args:
        update: –û–±—ä–µ–∫—Ç Update –æ—Ç Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º

    """
    await update.message.reply_text(
        "üåê <b>DMarket WebApp</b>\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å DMarket –ø—Ä—è–º–æ –≤ Telegram:",
        reply_markup=get_webapp_button(),
        parse_mode=ParseMode.HTML,
    )


async def markets_command(update, context):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /markets.

    Args:
        update: –û–±—ä–µ–∫—Ç Update –æ—Ç Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º

    """
    await update.message.reply_text(
        "üìä <b>–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä—ã–Ω–∫–æ–≤</b>\n\n" "–í—ã–±–µ—Ä–∏—Ç–µ —Ä—ã–Ω–∫–∏ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:",
        reply_markup=get_marketplace_comparison_keyboard(),
        parse_mode=ParseMode.HTML,
    )


async def dmarket_status_command(update, context):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /status –∏–ª–∏ /dmarket.

    Args:
        update: –û–±—ä–µ–∫—Ç Update –æ—Ç Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º

    """
    await update.message.reply_text(
        "üîç <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ DMarket API...</b>",
        parse_mode=ParseMode.HTML,
    )


async def arbitrage_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /arbitrage.

    Args:
        update: –û–±—ä–µ–∫—Ç Update –æ—Ç Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º

    """
    await update.effective_chat.send_action(ChatAction.TYPING)

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞—Ä–±–∏—Ç—Ä–∞–∂–∞
    keyboard = get_modern_arbitrage_keyboard()
    await update.message.reply_text(
        "üîç <b>–ú–µ–Ω—é –∞—Ä–±–∏—Ç—Ä–∞–∂–∞:</b>",
        reply_markup=keyboard,
        parse_mode=ParseMode.HTML,
    )


async def handle_text_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.

    Args:
        update: –û–±—ä–µ–∫—Ç Update –æ—Ç Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º

    """
    text = update.message.text

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    if text == "üîç –ê—Ä–±–∏—Ç—Ä–∞–∂":
        await arbitrage_command(update, context)
    elif text == "üìä –ë–∞–ª–∞–Ω—Å":
        await check_balance_command(update.message, context)
    elif text == "üåê –û—Ç–∫—Ä—ã—Ç—å DMarket":
        await webapp_command(update, context)
    elif text == "üìà –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞":
        await update.message.reply_text(
            "üìä <b>–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞</b>\n\n" "–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä—ã–Ω–æ—á–Ω—ã—Ö —Ç–µ–Ω–¥–µ–Ω—Ü–∏–π –∏ —Ü–µ–Ω:",
            reply_markup=get_game_selection_keyboard(),
            parse_mode=ParseMode.HTML,
        )
    elif text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏":
        await update.message.reply_text(
            "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n\n" "–§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
            parse_mode=ParseMode.HTML,
            reply_markup=get_modern_arbitrage_keyboard(),
        )
    elif text == "‚ùì –ü–æ–º–æ—â—å":
        await help_command(update, context)


# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
__all__ = [
    "arbitrage_command",
    "dmarket_status_command",
    "handle_text_buttons",
    "help_command",
    "markets_command",
    "start_command",
    "webapp_command",
]
